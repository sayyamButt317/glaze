// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id                     String               @id @default(uuid())
  name                   String
  category               String
  ingredients            String
  priceInCents           Int
  imagePath              String
  description            String
  include                String
  isAvailableForPurchase Boolean                @default(true)
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  Order                  Order[]
}
model Injection{
  id String @id @default(uuid())
  name String
  priceInCents Int
  description String
  imagePath   String
  points String
  isAvailableForPurchase Boolean @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime  @updatedAt
  Order   Order[]

} 
model User {
  id        String   @id @default(uuid())
  firstname      String
  lastname      String
  email     String   @unique 
  phone     Int
  DOB       DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id               String @id @default(uuid())
  PricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  userId           String 
  productId        String  
  injectionId   String 
  user    User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  product Product       @relation(fields: [productId], references: [id], onDelete: Restrict)
  injection Injection   @relation(fields: [injectionId],references: [id], onDelete:Restrict )
}



